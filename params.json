{"name":"Performance","tagline":"An abbreviated performance checklist with helpful resources","body":"### An abbreviated performance checklist with helpful resources\r\n\r\n\r\n#### Foundation and Design\r\n\r\n- [ ] Set clear expectations for performance\r\n- [ ] Measure performance throughout design and development\r\n- [ ] Test under sub-optimal conditions\r\n- [ ] Test with actual devices\r\n- [ ] Only include content that is necessary for the audience/message\r\n- [ ] Allow opt-in experiences\r\n- [ ] Utilize lazy loading and progressive enhancement\r\n- [ ] Remove unnecessary dependencies or files, like libraries that are overkill\r\n- [ ] Perceived performance can be just as important as actual performance\r\n\r\n#### Let's Get Technical!\r\nThe following tools are pretty grunt heavy, but [similar](http://gulpjs.com/) [analogs](http://webgrease.codeplex.com/documentation) exist\r\n\r\n- [ ] Minify HTML ([Grunt HTMLmin](http://perfectionkills.com/html-minifier-revisited/))\r\n- [ ] Minify CSS ([Grunt CSSMin](https://github.com/gruntjs/grunt-contrib-cssmin))  ([Grunt Sass `style`](https://github.com/gruntjs/grunt-contrib-sass))\r\n- [ ] Minify Javascript ([Grunt Uglify](https://github.com/gruntjs/grunt-contrib-uglify))\r\n- [ ] Concatenate javascript ([Grunt Concat](https://github.com/gruntjs/grunt-contrib-concat))\r\n- [ ] Optimize the delivery of traditional images ([Smush It App](http://www.smushit.com/ysmush.it/)) ([Grunt Imagemin](https://github.com/gruntjs/grunt-contrib-imagemin))\r\n- [ ] Sprite images, consider icon fonts and/or inline as SVG ([Article and Grunt](http://benfrain.com/image-sprites-data-uris-icon-fonts-v-svgs/))\r\n- [ ] Prioritize above the fold, critical content and CSS ([Grunt Penthouse](https://github.com/pocketjoso/penthouse))\r\n- [ ] GZIP traffic ([Google Guidelines](https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/optimize-encoding-and-transfer)) ([H5BP Server Configs](https://github.com/h5bp/server-configs))\r\n- [ ] Utilize proper caching ([Google Guidelines](https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching))\r\n- [ ] Load webfonts asynchronously ([Webfont Loader](https://github.com/typekit/webfontloader))\r\n\r\n#### Performance Measuring Tools\r\n\r\n* [Web Page Test](http://www.webpagetest.org/)\r\n* [Google Page Speed Insights](https://developers.google.com/speed/pagespeed/insights/)\r\n\r\n#### Go forth, be performant!\r\nThere are many more resources out there; the web is a beatuful mosiac. Find more performance inspiration here:\r\n\r\n* [Set a Performance Budget](http://timkadlec.com/2013/01/setting-a-performance-budget/)\r\n* [Performance Tooling Today](http://perf-tooling.today/)\r\n","google":"UA-32459118-4","note":"Don't delete this file! It's used internally to help with page regeneration."}